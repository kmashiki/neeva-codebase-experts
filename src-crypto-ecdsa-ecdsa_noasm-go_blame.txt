a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  1) // Copyright 2020 The Go Authors. All rights reserved.
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  2) // Use of this source code is governed by a BSD-style
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  3) // license that can be found in the LICENSE file.
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  4) 
d4b26382342 (<rsc@golang.org>     2021-02-19 18:35:10 -0500  5) //go:build !s390x
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  6) 
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  7) package ecdsa
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  8) 
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  9) import (
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 10) 	"crypto/cipher"
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 11) 	"crypto/elliptic"
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 12) 	"math/big"
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 13) )
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 14) 
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 15) func sign(priv *PrivateKey, csprng *cipher.StreamReader, c elliptic.Curve, hash []byte) (r, s *big.Int, err error) {
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 16) 	return signGeneric(priv, csprng, c, hash)
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 17) }
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 18) 
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 19) func verify(pub *PublicKey, c elliptic.Curve, hash []byte, r, s *big.Int) bool {
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 20) 	return verifyGeneric(pub, c, hash, r, s)
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 21) }
