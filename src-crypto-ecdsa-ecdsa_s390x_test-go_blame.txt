a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  1) // Copyright 2020 The Go Authors. All rights reserved.
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  2) // Use of this source code is governed by a BSD-style
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  3) // license that can be found in the LICENSE file.
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  4) 
d4b26382342 (<rsc@golang.org>     2021-02-19 18:35:10 -0500  5) //go:build s390x
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  6) 
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  7) package ecdsa
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  8) 
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400  9) import (
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 10) 	"crypto/elliptic"
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 11) 	"testing"
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 12) )
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 13) 
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 14) func TestNoAsm(t *testing.T) {
1108cbe60b8 (<filippo@golang.org> 2021-04-30 23:10:26 -0400 15) 	testingDisableKDSA = true
1108cbe60b8 (<filippo@golang.org> 2021-04-30 23:10:26 -0400 16) 	defer func() { testingDisableKDSA = false }()
1108cbe60b8 (<filippo@golang.org> 2021-04-30 23:10:26 -0400 17) 
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 18) 	curves := [...]elliptic.Curve{
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 19) 		elliptic.P256(),
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 20) 		elliptic.P384(),
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 21) 		elliptic.P521(),
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 22) 	}
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 23) 
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 24) 	for _, curve := range curves {
1108cbe60b8 (<filippo@golang.org> 2021-04-30 23:10:26 -0400 25) 		name := curve.Params().Name
1108cbe60b8 (<filippo@golang.org> 2021-04-30 23:10:26 -0400 26) 		t.Run(name, func(t *testing.T) { testKeyGeneration(t, curve) })
1108cbe60b8 (<filippo@golang.org> 2021-04-30 23:10:26 -0400 27) 		t.Run(name, func(t *testing.T) { testSignAndVerify(t, curve) })
1108cbe60b8 (<filippo@golang.org> 2021-04-30 23:10:26 -0400 28) 		t.Run(name, func(t *testing.T) { testNonceSafety(t, curve) })
1108cbe60b8 (<filippo@golang.org> 2021-04-30 23:10:26 -0400 29) 		t.Run(name, func(t *testing.T) { testINDCCA(t, curve) })
1108cbe60b8 (<filippo@golang.org> 2021-04-30 23:10:26 -0400 30) 		t.Run(name, func(t *testing.T) { testNegativeInputs(t, curve) })
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 31) 	}
a637ee1970a (<ruixin.bao@ibm.com> 2020-04-15 16:50:50 -0400 32) }
