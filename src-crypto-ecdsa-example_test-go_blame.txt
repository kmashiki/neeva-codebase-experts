db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100  1) // Copyright 2018 The Go Authors. All rights reserved.
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100  2) // Use of this source code is governed by a BSD-style
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100  3) // license that can be found in the LICENSE file.
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100  4) 
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100  5) package ecdsa_test
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100  6) 
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100  7) import (
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100  8) 	"crypto/ecdsa"
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100  9) 	"crypto/elliptic"
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 10) 	"crypto/rand"
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 11) 	"crypto/sha256"
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 12) 	"fmt"
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 13) )
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 14) 
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 15) func Example() {
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 16) 	privateKey, err := ecdsa.GenerateKey(elliptic.P256(), rand.Reader)
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 17) 	if err != nil {
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 18) 		panic(err)
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 19) 	}
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 20) 
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 21) 	msg := "hello, world"
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 22) 	hash := sha256.Sum256([]byte(msg))
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 23) 
8c09e8af363 (<katie@golang.org>           2020-02-05 15:19:41 -0500 24) 	sig, err := ecdsa.SignASN1(rand.Reader, privateKey, hash[:])
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 25) 	if err != nil {
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 26) 		panic(err)
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 27) 	}
8c09e8af363 (<katie@golang.org>           2020-02-05 15:19:41 -0500 28) 	fmt.Printf("signature: %x\n", sig)
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 29) 
8c09e8af363 (<katie@golang.org>           2020-02-05 15:19:41 -0500 30) 	valid := ecdsa.VerifyASN1(&privateKey.PublicKey, hash[:], sig)
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 31) 	fmt.Println("signature verified:", valid)
db810b6e394 (<philip.j.r.pearl@gmail.com> 2018-06-20 20:40:33 +0100 32) }
