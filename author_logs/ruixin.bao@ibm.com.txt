commit 54a112d7197ec320527614e7502a3243eab93b6e
Author: Ruixin Bao <ruixin.bao@ibm.com>
Date:   Tue Sep 29 15:55:19 2020 -0400

    crypto/ecdsa: use FillBytes on s390x
    
    Originally, zeroExtendAndCopy is used to pad src with leading zeros and
    copy the padded src into the destination. It is no longer needed after
    CL 230397 introduced FillBytes. We can simply use that and remove the
    zeroExtendAndCopy function. It is cleaner and reduces some allocation.
    
    In addition, this patch tries to avoid calling hashToInt function in
    both Sign and Verify function so some allocation is reduced.
    
    Benchmarks:
    name             old alloc/op   new alloc/op   delta
    SignP256-8         1.60kB ± 0%    1.49kB ± 0%    -7.23%  (p=0.000 n=20+20)
    SignP384-8         1.74kB ± 0%    1.59kB ± 0%    -8.50%  (p=0.000 n=20+18)
    VerifyP256-8         176B ± 0%        0B       -100.00%  (p=0.000 n=20+20)
    KeyGeneration-8      640B ± 0%      640B ± 0%      ~     (all equal)
    
    name             old allocs/op  new allocs/op  delta
    SignP256-8           22.0 ± 0%      17.0 ± 0%   -22.73%  (p=0.000 n=20+20)
    SignP384-8           22.0 ± 0%      17.0 ± 0%   -22.73%  (p=0.000 n=20+20)
    VerifyP256-8         7.00 ± 0%      0.00       -100.00%  (p=0.000 n=20+20)
    KeyGeneration-8      13.0 ± 0%      13.0 ± 0%      ~     (all equal)
    
    Change-Id: Ic4c95191eded55deb3420d97db501689f3b173c9
    Reviewed-on: https://go-review.googlesource.com/c/go/+/232297
    Reviewed-by: Michael Munday <mike.munday@ibm.com>
    Run-TryBot: Michael Munday <mike.munday@ibm.com>
    TryBot-Result: Go Bot <gobot@golang.org>
    Trust: Filippo Valsorda <filippo@golang.org>

 src/crypto/ecdsa/ecdsa_s390x.go | 59 +++++++++++++++++++----------------------
 1 file changed, 27 insertions(+), 32 deletions(-)

commit a637ee1970ac9f005094fd46eadd64c4433168e7
Author: Ruixin Bao <ruixin.bao@ibm.com>
Date:   Wed Apr 15 16:50:50 2020 -0400

    crypto/ecdsa: implement ecdsa on s390x for P256/P384/P521 using KDSA instruction
    
    This CL revives CL 174437(also IBM CLA) and adds benchmarks and some simplifications.
    
    The original commit message is as follows:
    
    Utilize KDSA when available. This guarantees constant time operation on all three curves mentioned,
    and is faster than conventional assembly.
    
    Benchmarks:
    name             old time/op    new time/op    delta
    SignP256-8         15.2µs ±14%    14.1µs ±18%     ~     (p=0.356 n=9+10)
    SignP384-8         4.28ms ±26%    0.02ms ±30%  -99.43%  (p=0.000 n=10+10)
    VerifyP256-8       33.6µs ±13%    13.3µs ±38%  -60.32%  (p=0.000 n=9+10)
    
    name             old alloc/op   new alloc/op   delta
    SignP256-8         2.16kB ± 0%    1.60kB ± 0%  -25.63%  (p=0.000 n=9+10)
    SignP384-8         1.75MB ± 0%    0.00MB ± 0%  -99.90%  (p=0.000 n=9+10)
    VerifyP256-8       1.08kB ± 0%    0.18kB ± 0%  -83.70%  (p=0.000 n=9+10)
    
    name             old allocs/op  new allocs/op  delta
    SignP256-8           29.0 ± 0%      22.0 ± 0%  -24.14%  (p=0.000 n=10+10)
    SignP384-8          14.4k ± 0%      0.0k ± 0%  -99.85%  (p=0.000 n=9+10)
    VerifyP256-8         23.0 ± 0%       7.0 ± 0%  -69.57%  (p=0.000 n=10+10)
    
    Change-Id: Ifa1fc5917fa7592dd592affa7549147dbc9b4169
    Reviewed-on: https://go-review.googlesource.com/c/go/+/228580
    Run-TryBot: Michael Munday <mike.munday@ibm.com>
    TryBot-Result: Gobot Gobot <gobot@golang.org>
    Reviewed-by: Michael Munday <mike.munday@ibm.com>

 src/crypto/ecdsa/ecdsa.go            |  12 ++-
 src/crypto/ecdsa/ecdsa_noasm.go      |  21 +++++
 src/crypto/ecdsa/ecdsa_s390x.go      | 162 +++++++++++++++++++++++++++++++++++
 src/crypto/ecdsa/ecdsa_s390x.s       |  28 ++++++
 src/crypto/ecdsa/ecdsa_s390x_test.go |  33 +++++++
 5 files changed, 254 insertions(+), 2 deletions(-)
